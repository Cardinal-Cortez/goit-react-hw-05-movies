{"version":3,"file":"static/js/7.8b62cd14.chunk.js","mappings":"yLA0DA,UAvDe,WAAO,IAAD,EACjB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAK,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAkCjB,OAzBAC,EAAAA,EAAAA,YAAU,WACN,GAAc,KAAVJ,EAAJ,CAEA,IAKMK,EAAG,sGADO,mCACP,kBAAmHL,GAE5HM,MAAMD,EAPU,CACZE,OAAQ,MACRC,QAAS,CAAEC,OAAQ,sBAMlBC,MAAK,SAACC,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEpB,MAAM,IAAIC,MAAM,uBACnB,IACAJ,MAAK,YAAkB,IAAfK,EAAc,EAAdA,QACLhB,EAAUgB,EACb,IACAC,OAAM,SAACC,GACJC,QAAQD,MAAMA,EACjB,GArBmB,CAsB3B,GAAE,CAACjB,KAGA,iCACI,kBAAMmB,SAlCO,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACf3B,EAAgB,CAAEI,MAAOsB,EAAKE,SAASxB,MAAMyB,MAAMC,gBACnDJ,EAAKK,OACR,EA6BO,WACI,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,mBAC5C,mBAAQF,KAAK,SAAb,wBAEJ,wBACK9B,EAAOiC,KAAI,SAACC,GAAD,OACR,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMlC,GAAvC,SAAoD8B,EAAKK,SADpDL,EAAKE,GADN,QAQ3B,C","sources":["components/pages/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const query = searchParams.get('query') ?? \"\";\n    const location = useLocation();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        setSearchParams({ query: form.elements.query.value.toLowerCase() });\n        form.reset();\n    };\n\n    useEffect(() => {\n        if (query === \"\") return;\n\n        const options = {\n            method: 'GET',\n            headers: { accept: 'application/json' },\n        };\n        const API_KEY = '619e0771d50f6f0cacad940951db2b61';\n        const url = `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&api_key=${API_KEY}&query=${query}`;\n\n        fetch(url, options)\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error('Something went wrong');\n            })\n            .then(({ results }) => {\n                setMovies(results);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, [query]);\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"query\" placeholder=\"Search movies\" />\n                <button type=\"submit\">Search</button>\n            </form>\n            <ul>\n                {movies.map((item) => (\n                    <li key={item.id}>\n                        <Link to={`${item.id}`} state={{ from: location }}>{item.title}</Link>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","query","get","location","useLocation","useEffect","url","fetch","method","headers","accept","then","response","ok","json","Error","results","catch","error","console","onSubmit","e","preventDefault","form","currentTarget","elements","value","toLowerCase","reset","type","name","placeholder","map","item","to","id","state","from","title"],"sourceRoot":""}