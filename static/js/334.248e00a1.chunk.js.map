{"version":3,"file":"static/js/334.248e00a1.chunk.js","mappings":"6LAqEA,UAlEqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KA2B3D,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAQMC,EAAG,6CAAyCZ,EAAzC,oBADO,mCACP,mBACTa,MAAMD,EATU,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAMhBC,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,uBACjB,IACAJ,MAAK,SAACK,GACLnB,EAAQmB,EACT,IACAC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACzB,KAGF,4BACE,SAAC,KAAD,CAAM2B,GAAIpB,EAAoBqB,QAA9B,uBACCzB,IACC,4BACE,gBAAK0B,IAAG,yCAAoC1B,EAAK2B,aAAeC,IAAK5B,EAAK6B,SAC1E,0BAAK7B,EAAK6B,MAAV,KAAmB7B,EAAK8B,aAAaC,MAAM,EAAG,GAA9C,QACA,wCAAgBC,KAAKC,MAA0B,IAApBjC,EAAKkC,cAAsB,GAAtD,QACA,uCACA,uBAAIlC,EAAKmC,YACT,oCACA,wBACGnC,EAAKoC,OAAOC,KAAI,SAACC,GAAD,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,UAMvB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAG,OAAOlB,MAAO,CAACC,KAAMH,GAA9B,qBAEF,yBACE,SAAC,KAAD,CAAMoB,GAAG,UAAUlB,MAAO,CAACC,KAAMH,GAAjC,8BAIN,SAAC,EAAAqC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/pages/MovieDetails.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, Suspense  } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  \n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MTllMDc3MWQ1MGY2ZjBjYWNhZDk0MDk1MWRiMmI2MSIsInN1YiI6IjY0N2MzODg3ZTMyM2YzMDBjNDJhNWE2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.yuF0iMImgdLcfO_LlB_t43NuUW1bjDcFVJ1WoXKXVQ4',\n      },\n    };\n    const API_KEY = '619e0771d50f6f0cacad940951db2b61';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    fetch(url, options)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Something went wrong');\n      })\n      .then((result) => {\n        setData(result);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}> Go back </Link>\n      {data && (\n        <div>\n          <img src={`https://image.tmdb.org/t/p/w200${data.poster_path}`} alt={data.title} />\n          <h2>{data.title} ({data.release_date.slice(0, 4)})</h2>\n          <p>User Score: {Math.round(data.vote_average * 100) / 10}%</p>\n          <h3>Overview:</h3>\n          <p>{data.overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {data.genres.map((genre) => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <div>\n        <p>additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{from: backLinkLocationRef}}>Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{from: backLinkLocationRef}}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails\n"],"names":["movieId","useParams","useState","data","setData","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","url","fetch","method","headers","accept","Authorization","then","response","ok","json","Error","result","catch","error","console","to","current","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}